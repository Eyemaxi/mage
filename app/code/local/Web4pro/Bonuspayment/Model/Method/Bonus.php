<?php
/**
 * Created by PhpStorm.
 * User: dev01
 * Date: 19.12.17
 * Time: 12:21
 */

class Web4pro_Bonuspayment_Model_Method_Bonus extends Mage_Payment_Model_Method_Abstract
{
    protected $_code = 'bonuspayment';

    /**
     * Payment Method features
     * @var bool
     */
    protected $_isGateway                   = true;
    protected $_canOrder                    = false;
    protected $_canAuthorize                = true;
    protected $_canCapture                  = true;
    protected $_canCapturePartial           = true;
    protected $_canCaptureOnce              = true;
    protected $_canRefund                   = true;
    protected $_canRefundInvoicePartial     = true;

    public function _construct()
    {
        parent::_construct(); // TODO: Change the autogenerated stub
    }

    /**
     * @param Mage_Sales_Model_Quote|null $quote
     * @return bool
     */
    public function isAvailable($quote = null)
    {
        parent::isAvailable($quote); // TODO: Change the autogenerated stub

        if(!$this->isApplicableToQuote($quote, self::CHECK_USE_FOR_COUNTRY))
            return false;

        return $this->isBonusSupply($quote);
    }

    /**
     * @param Mage_Sales_Model_Quote $quote
     * @return bool
     */
    protected function isBonusSupply($quote)
    {
        $grandTotal = $quote->getData('grand_total');
        $bonusAccount = $quote->getCustomer()->getData('bonuspayment');

        if ($grandTotal > $bonusAccount) {
            return false;
        }
        else {
            return true;
        }
    }

    /**
     * custom capture
     *
     * @param Mage_Sales_Model_Order_Payment $payment
     * @param float $amount
     * @return $this
     */
    public function capture(Varien_Object $payment, $amount)
    {
        /**
         * set transaction id from increment order id value
         */
        $payment->setTransactionId($payment->getOrder()->getIncrementId());
        $payment->setIsTransactionClosed(false);

        $customerId = $payment->getOrder()->getCustomerId();
        $currentCustomer = Mage::getSingleton('customer/customer');
        $currentCustomer->load($customerId);
        $bonusAccount = $currentCustomer->getData('bonuspayment');
        $bonusAccount -= $amount;
        $currentCustomer->setData('bonuspayment', $bonusAccount);
        $currentCustomer->save();

        return $this;
    }

    /**
     * @param Mage_Sales_Model_Order_Payment $payment
     * @param float $amount
     * @return $this
     */
    public function refund(Varien_Object $payment, $amount)
    {
        parent::refund($payment, $amount); // TODO: Change the autogenerated stub
        $customerId = $payment->getOrder()->getCustomerId();
        $currentCustomer = Mage::getSingleton('customer/customer');
        $currentCustomer->load($customerId);
        $bonusAccount = $currentCustomer->getData('bonuspayment');
        $bonusAccount += $amount;
        $currentCustomer->setData('bonuspayment', $bonusAccount);
        $currentCustomer->save();

        return $this;

    }


}